# The local time zone. See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TIME_ZONE=Europe/Paris

# The local DNS server. Often provided by the Internet provider or
# a local router.
# Could be 8.8.8.8 (provided by Google)
NETWORK_DNS=192.168.1.1
# The Z-Wave device. The 'by-id' device is stable, the '/dev/ttyUSBX' may
# change, for example in case of a soft reset of the controller.
ZWAVE_DEVICE=/dev/serial/by-id/usb-xxx

# IP address or DNS name of the Domoticz host
DOMOTICZ_IP=domoticz.local
# Domoticz server ports
DOMOTICZ_HTTP_PORT=8080
DOMOTICZ_HTTPS_PORT=443
DOMOTICZ_SHARE_PORT=6144

# Default MQTT discovery prefix; if you
# have an existing one, set it
ZWAVE_DISCOVERY_PREFIX=homeassistant

# Z-Wave security keys. Here is the Domoticz default value
# that should have been changed... Set the ones you have
# or generate random ones for a new Z-Wave network (see
# Z-Wave JS UI documentation 
# https://zwave-js.github.io/zwave-js-ui/#/getting-started/quick-start)
#
# The keys must have different values
ZWAVE_KEY_S2_Unauthenticated=0102030405060708090A0B0C0D0E0F10
ZWAVE_KEY_S2_AccessControl=0102030405060708090A0B0C0D0E0F11
ZWAVE_KEY_S2_Authenticated=0102030405060708090A0B0C0D0E0F12
ZWAVE_KEY_S0_Legacy=0102030405060708090A0B0C0D0E0F13

# The Zigbee device. The 'by-id' device is stable, the '/dev/ttyUSBX' may
# change, for example in case of a soft reset of the controller.
ZIGBEE_DEVICE=/dev/serial/by-id/usb-xxx

# Secure your network: use your existing network key (if any, otherwise
# you'll have to re-pair the devices) or use GENERATE to create a new one
# Existing key value is like: [7, 3, 5, 7, 9, 11, 13, 15, 0, 2, 4, 6, 8, 11, 12, 13]
ZIGBEE_NETWORK_KEY=GENERATE
# Permit devices to join (true or false)
ZIGBEE_PERMIT_JOIN=true
# MQTT prefix for the homeassistant/Domoticz integration; must be different
# from the Z-wave discovery prefix
ZIGBEE_DISCOVERY_PREFIX=zigbee4dtcz

# Docker compose restart option (see https://docs.docker.com/compose/compose-file/#restart)
# Possible values: no, always, on-failure, unless-stopped
DOCKER_RESTART=always

